desc: --massif-out-file=mem_report
cmd: ./benchmark_space
time_unit: i
#-----------
snapshot=0
#-----------
time=0
mem_heap_B=0
mem_heap_extra_B=0
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=1
#-----------
time=273139853
mem_heap_B=159008
mem_heap_extra_B=20176
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=2
#-----------
time=528644483
mem_heap_B=191912
mem_heap_extra_B=25720
mem_stacks_B=0
heap_tree=detailed
n15: 191912 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 16704 0x405B10: allocate (new_allocator.h:114)
  n1: 16704 0x405B10: allocate (alloc_traits.h:444)
   n1: 16704 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 16704 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 16704 0x405B10: push_back (stl_vector.h:1195)
      n1: 16704 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 16704 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 16704 0x403CAA: main (lexm_spacebn.cpp:10)
        n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 14336 0x405965: allocate (new_allocator.h:114)
  n1: 14336 0x405965: allocate (alloc_traits.h:444)
   n1: 14336 0x405965: _M_allocate (stl_vector.h:343)
    n1: 14336 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 14336 0x405965: push_back (stl_vector.h:1195)
      n1: 14336 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 14336 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 14336 0x403CAA: main (lexm_spacebn.cpp:10)
        n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 14000 0x404D3A: allocate (new_allocator.h:114)
  n1: 14000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 14000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 14000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 14000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 14000 0x4017C5: operator[] (stl_map.h:499)
       n2: 14000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 14000 0x403CB4: main (lexm_spacebn.cpp:11)
        n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 14000 0x408B97: allocate (new_allocator.h:114)
  n1: 14000 0x408B97: allocate (alloc_traits.h:444)
   n1: 14000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 14000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 14000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 14000 0x4055B6: insert (unordered_map.h:586)
       n1: 14000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 14000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 14000 0x403CAA: main (lexm_spacebn.cpp:10)
         n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 10712 0x404BC2: allocate (new_allocator.h:114)
  n1: 10712 0x404BC2: allocate (alloc_traits.h:444)
   n1: 10712 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 10712 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 10712 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 10712 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 10712 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 6384 0x408796: operator[] (hashtable_policy.h:704)
         n1: 6384 0x408796: operator[] (unordered_map.h:985)
          n1: 6384 0x408796: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
           n2: 6384 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
            n0: 6384 0x403CB4: main (lexm_spacebn.cpp:11)
            n0: 0 in 6 places, all below massif's threshold (1.00%)
        n1: 4328 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 4328 0x4016BA: operator[] (unordered_map.h:985)
          n2: 4328 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 4328 0x403CB4: main (lexm_spacebn.cpp:11)
           n0: 0 in 6 places, all below massif's threshold (1.00%)
 n0: 9312 in 10 places, all below massif's threshold (1.00%)
 n1: 8416 0x402429: allocate (new_allocator.h:114)
  n1: 8416 0x402429: allocate (alloc_traits.h:444)
   n1: 8416 0x402429: _M_allocate (stl_vector.h:343)
    n1: 8416 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 8416 0x402429: push_back (stl_vector.h:1195)
      n2: 8416 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 8416 0x403CB4: main (lexm_spacebn.cpp:11)
       n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 5600 0x401539: allocate (new_allocator.h:114)
  n1: 5600 0x401539: allocate (alloc_traits.h:444)
   n1: 5600 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 5600 0x401539: operator[] (hashtable_policy.h:701)
     n1: 5600 0x401539: operator[] (unordered_map.h:985)
      n2: 5600 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 5600 0x403CB4: main (lexm_spacebn.cpp:11)
       n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 5600 0x401689: allocate (new_allocator.h:114)
  n1: 5600 0x401689: allocate (alloc_traits.h:444)
   n1: 5600 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 5600 0x401689: operator[] (hashtable_policy.h:701)
     n1: 5600 0x401689: operator[] (unordered_map.h:985)
      n2: 5600 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 5600 0x403CB4: main (lexm_spacebn.cpp:11)
       n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 4328 0x4049E2: allocate (new_allocator.h:114)
  n1: 4328 0x4049E2: allocate (alloc_traits.h:444)
   n1: 4328 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 4328 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 4328 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 4328 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 4328 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 4328 0x401567: operator[] (hashtable_policy.h:704)
         n1: 4328 0x401567: operator[] (unordered_map.h:985)
          n2: 4328 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 4328 0x403CB4: main (lexm_spacebn.cpp:11)
           n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 4328 0x408CF2: allocate (new_allocator.h:114)
  n1: 4328 0x408CF2: allocate (alloc_traits.h:444)
   n1: 4328 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 4328 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 4328 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 4328 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 4328 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 4328 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 4328 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 4328 0x4055B6: insert (unordered_map.h:586)
           n1: 4328 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 4328 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 4328 0x403CAA: main (lexm_spacebn.cpp:10)
             n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 4224 0x40235B: allocate (new_allocator.h:114)
  n1: 4224 0x40235B: allocate (alloc_traits.h:444)
   n1: 4224 0x40235B: _M_allocate (stl_vector.h:343)
    n1: 4224 0x40235B: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4224 0x40235B: push_back (stl_vector.h:1195)
      n2: 4224 0x40235B: graph_algorithms::lexm(Graph&) (lexm.h:92)
       n0: 4224 0x403CB4: main (lexm_spacebn.cpp:11)
       n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 4128 0x408769: allocate (new_allocator.h:114)
  n1: 4128 0x408769: allocate (alloc_traits.h:444)
   n1: 4128 0x408769: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 4128 0x408769: operator[] (hashtable_policy.h:701)
     n1: 4128 0x408769: operator[] (unordered_map.h:985)
      n1: 4128 0x408769: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
       n2: 4128 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
        n0: 4128 0x403CB4: main (lexm_spacebn.cpp:11)
        n0: 0 in 6 places, all below massif's threshold (1.00%)
 n1: 3520 0x401AF9: allocate (new_allocator.h:114)
  n1: 3520 0x401AF9: allocate (alloc_traits.h:444)
   n1: 3520 0x401AF9: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 3520 0x401AF9: operator[] (hashtable_policy.h:701)
     n1: 3520 0x401AF9: operator[] (unordered_map.h:985)
      n2: 3520 0x401AF9: graph_algorithms::lexm(Graph&) (lexm.h:55)
       n0: 3520 0x403CB4: main (lexm_spacebn.cpp:11)
       n0: 0 in 6 places, all below massif's threshold (1.00%)
#-----------
snapshot=3
#-----------
time=694352300
mem_heap_B=193544
mem_heap_extra_B=26448
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=4
#-----------
time=868171794
mem_heap_B=136864
mem_heap_extra_B=11120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=5
#-----------
time=1135584038
mem_heap_B=217128
mem_heap_extra_B=29280
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=6
#-----------
time=1392519984
mem_heap_B=229312
mem_heap_extra_B=31760
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=7
#-----------
time=1553231361
mem_heap_B=232216
mem_heap_extra_B=32264
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=8
#-----------
time=1815579884
mem_heap_B=253448
mem_heap_extra_B=32856
mem_stacks_B=0
heap_tree=detailed
n13: 253448 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 38848 0x405965: allocate (new_allocator.h:114)
  n1: 38848 0x405965: allocate (alloc_traits.h:444)
   n1: 38848 0x405965: _M_allocate (stl_vector.h:343)
    n1: 38848 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 38848 0x405965: push_back (stl_vector.h:1195)
      n1: 38848 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 38848 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 38848 0x403D76: main (lexm_spacebn.cpp:10)
        n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 31488 0x405B10: allocate (new_allocator.h:114)
  n1: 31488 0x405B10: allocate (alloc_traits.h:444)
   n1: 31488 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 31488 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 31488 0x405B10: push_back (stl_vector.h:1195)
      n1: 31488 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 31488 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 31488 0x403D76: main (lexm_spacebn.cpp:10)
        n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 22000 0x404D3A: allocate (new_allocator.h:114)
  n1: 22000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 22000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 22000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 22000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 22000 0x4017C5: operator[] (stl_map.h:499)
       n2: 22000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 22000 0x403D80: main (lexm_spacebn.cpp:11)
        n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 22000 0x408B97: allocate (new_allocator.h:114)
  n1: 22000 0x408B97: allocate (alloc_traits.h:444)
   n1: 22000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 22000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 22000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 22000 0x4055B6: insert (unordered_map.h:586)
       n1: 22000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 22000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 22000 0x403D76: main (lexm_spacebn.cpp:10)
         n0: 0 in 10 places, all below massif's threshold (1.00%)
 n0: 14000 in 12 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403D80: main (lexm_spacebn.cpp:11)
           n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403D80: main (lexm_spacebn.cpp:11)
           n0: 0 in 10 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403D76: main (lexm_spacebn.cpp:10)
             n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 8800 0x401539: allocate (new_allocator.h:114)
  n1: 8800 0x401539: allocate (alloc_traits.h:444)
   n1: 8800 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 8800 0x401539: operator[] (hashtable_policy.h:701)
     n1: 8800 0x401539: operator[] (unordered_map.h:985)
      n2: 8800 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 8800 0x403D80: main (lexm_spacebn.cpp:11)
       n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 8800 0x401689: allocate (new_allocator.h:114)
  n1: 8800 0x401689: allocate (alloc_traits.h:444)
   n1: 8800 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 8800 0x401689: operator[] (hashtable_policy.h:701)
     n1: 8800 0x401689: operator[] (unordered_map.h:985)
      n2: 8800 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 8800 0x403D80: main (lexm_spacebn.cpp:11)
       n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 4096 0x401731: allocate (new_allocator.h:114)
  n1: 4096 0x401731: allocate (alloc_traits.h:444)
   n1: 4096 0x401731: _M_allocate (stl_vector.h:343)
    n1: 4096 0x401731: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4096 0x401731: push_back (stl_vector.h:1195)
      n2: 4096 0x401731: graph_algorithms::lexm(Graph&) (lexm.h:31)
       n0: 4096 0x403D80: main (lexm_spacebn.cpp:11)
       n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 4096 0x405644: allocate (new_allocator.h:114)
  n1: 4096 0x405644: allocate (alloc_traits.h:444)
   n1: 4096 0x405644: _M_allocate (stl_vector.h:343)
    n1: 4096 0x405644: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4096 0x405644: push_back (stl_vector.h:1195)
      n1: 4096 0x405644: Graph::addNode(int) (graph.cpp:13)
       n2: 4096 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
        n0: 4096 0x403D76: main (lexm_spacebn.cpp:10)
        n0: 0 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=9
#-----------
time=1980234374
mem_heap_B=272812
mem_heap_extra_B=37492
mem_stacks_B=0
heap_tree=detailed
n16: 272812 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 38848 0x405965: allocate (new_allocator.h:114)
  n1: 38848 0x405965: allocate (alloc_traits.h:444)
   n1: 38848 0x405965: _M_allocate (stl_vector.h:343)
    n1: 38848 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 38848 0x405965: push_back (stl_vector.h:1195)
      n1: 38848 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 38848 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 38848 0x403D76: main (lexm_spacebn.cpp:10)
        n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 31488 0x405B10: allocate (new_allocator.h:114)
  n1: 31488 0x405B10: allocate (alloc_traits.h:444)
   n1: 31488 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 31488 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 31488 0x405B10: push_back (stl_vector.h:1195)
      n1: 31488 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 31488 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 31488 0x403D76: main (lexm_spacebn.cpp:10)
        n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 22000 0x404D3A: allocate (new_allocator.h:114)
  n1: 22000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 22000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 22000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 22000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 22000 0x4017C5: operator[] (stl_map.h:499)
       n2: 22000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 22000 0x403D80: main (lexm_spacebn.cpp:11)
        n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 22000 0x408B97: allocate (new_allocator.h:114)
  n1: 22000 0x408B97: allocate (alloc_traits.h:444)
   n1: 22000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 22000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 22000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 22000 0x4055B6: insert (unordered_map.h:586)
       n1: 22000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 22000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 22000 0x403D76: main (lexm_spacebn.cpp:10)
         n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 12352 0x402429: allocate (new_allocator.h:114)
  n1: 12352 0x402429: allocate (alloc_traits.h:444)
   n1: 12352 0x402429: _M_allocate (stl_vector.h:343)
    n1: 12352 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 12352 0x402429: push_back (stl_vector.h:1195)
      n2: 12352 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 12352 0x403D80: main (lexm_spacebn.cpp:11)
       n0: 0 in 10 places, all below massif's threshold (1.00%)
 n0: 10508 in 9 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403D80: main (lexm_spacebn.cpp:11)
           n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403D80: main (lexm_spacebn.cpp:11)
           n0: 0 in 10 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403D76: main (lexm_spacebn.cpp:10)
             n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 8800 0x401539: allocate (new_allocator.h:114)
  n1: 8800 0x401539: allocate (alloc_traits.h:444)
   n1: 8800 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 8800 0x401539: operator[] (hashtable_policy.h:701)
     n1: 8800 0x401539: operator[] (unordered_map.h:985)
      n2: 8800 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 8800 0x403D80: main (lexm_spacebn.cpp:11)
       n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 8800 0x401689: allocate (new_allocator.h:114)
  n1: 8800 0x401689: allocate (alloc_traits.h:444)
   n1: 8800 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 8800 0x401689: operator[] (hashtable_policy.h:701)
     n1: 8800 0x401689: operator[] (unordered_map.h:985)
      n2: 8800 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 8800 0x403D80: main (lexm_spacebn.cpp:11)
       n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 6464 0x40520B: allocate (new_allocator.h:114)
  n1: 6464 0x40520B: allocate (alloc_traits.h:444)
   n1: 6464 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 6464 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 6464 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 6464 0x40341B: operator[] (stl_map.h:499)
       n2: 6464 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 6464 0x403D80: main (lexm_spacebn.cpp:11)
        n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 4096 0x401731: allocate (new_allocator.h:114)
  n1: 4096 0x401731: allocate (alloc_traits.h:444)
   n1: 4096 0x401731: _M_allocate (stl_vector.h:343)
    n1: 4096 0x401731: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4096 0x401731: push_back (stl_vector.h:1195)
      n2: 4096 0x401731: graph_algorithms::lexm(Graph&) (lexm.h:31)
       n0: 4096 0x403D80: main (lexm_spacebn.cpp:11)
       n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 4096 0x405644: allocate (new_allocator.h:114)
  n1: 4096 0x405644: allocate (alloc_traits.h:444)
   n1: 4096 0x405644: _M_allocate (stl_vector.h:343)
    n1: 4096 0x405644: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4096 0x405644: push_back (stl_vector.h:1195)
      n1: 4096 0x405644: Graph::addNode(int) (graph.cpp:13)
       n2: 4096 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
        n0: 4096 0x403D76: main (lexm_spacebn.cpp:10)
        n0: 0 in 10 places, all below massif's threshold (1.00%)
 n1: 4040 0x401AF9: allocate (new_allocator.h:114)
  n1: 4040 0x401AF9: allocate (alloc_traits.h:444)
   n1: 4040 0x401AF9: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 4040 0x401AF9: operator[] (hashtable_policy.h:701)
     n1: 4040 0x401AF9: operator[] (unordered_map.h:985)
      n2: 4040 0x401AF9: graph_algorithms::lexm(Graph&) (lexm.h:55)
       n0: 4040 0x403D80: main (lexm_spacebn.cpp:11)
       n0: 0 in 10 places, all below massif's threshold (1.00%)
#-----------
snapshot=10
#-----------
time=2217894188
mem_heap_B=265792
mem_heap_extra_B=35160
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=11
#-----------
time=2406115650
mem_heap_B=181320
mem_heap_extra_B=14824
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=12
#-----------
time=2569970011
mem_heap_B=273376
mem_heap_extra_B=37232
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=13
#-----------
time=2827523566
mem_heap_B=278816
mem_heap_extra_B=38104
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=14
#-----------
time=3014619489
mem_heap_B=280400
mem_heap_extra_B=38104
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=15
#-----------
time=3294518935
mem_heap_B=285016
mem_heap_extra_B=38400
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=16
#-----------
time=3488017351
mem_heap_B=299456
mem_heap_extra_B=40744
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=17
#-----------
time=3638330892
mem_heap_B=300200
mem_heap_extra_B=40856
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=18
#-----------
time=3939049361
mem_heap_B=301224
mem_heap_extra_B=40856
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=19
#-----------
time=4160359407
mem_heap_B=200392
mem_heap_extra_B=17352
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=20
#-----------
time=4482615054
mem_heap_B=320200
mem_heap_extra_B=43696
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=21
#-----------
time=4725860643
mem_heap_B=331832
mem_heap_extra_B=46792
mem_stacks_B=0
heap_tree=detailed
n17: 331832 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 66688 0x405965: allocate (new_allocator.h:114)
  n1: 66688 0x405965: allocate (alloc_traits.h:444)
   n1: 66688 0x405965: _M_allocate (stl_vector.h:343)
    n1: 66688 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 66688 0x405965: push_back (stl_vector.h:1195)
      n1: 66688 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 66688 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 66688 0x403E0F: main (lexm_spacebn.cpp:10)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 38784 0x405B10: allocate (new_allocator.h:114)
  n1: 38784 0x405B10: allocate (alloc_traits.h:444)
   n1: 38784 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 38784 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 38784 0x405B10: push_back (stl_vector.h:1195)
      n1: 38784 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 38784 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 38784 0x403E0F: main (lexm_spacebn.cpp:10)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 28000 0x404D3A: allocate (new_allocator.h:114)
  n1: 28000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 28000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 28000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 28000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 28000 0x4017C5: operator[] (stl_map.h:499)
       n2: 28000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 28000 0x403E19: main (lexm_spacebn.cpp:11)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 28000 0x408B97: allocate (new_allocator.h:114)
  n1: 28000 0x408B97: allocate (alloc_traits.h:444)
   n1: 28000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 28000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 28000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 28000 0x4055B6: insert (unordered_map.h:586)
       n1: 28000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 28000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 28000 0x403E0F: main (lexm_spacebn.cpp:10)
         n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 13344 0x402429: allocate (new_allocator.h:114)
  n1: 13344 0x402429: allocate (alloc_traits.h:444)
   n1: 13344 0x402429: _M_allocate (stl_vector.h:343)
    n1: 13344 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 13344 0x402429: push_back (stl_vector.h:1195)
      n2: 13344 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 13344 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 11200 0x401539: allocate (new_allocator.h:114)
  n1: 11200 0x401539: allocate (alloc_traits.h:444)
   n1: 11200 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 11200 0x401539: operator[] (hashtable_policy.h:701)
     n1: 11200 0x401539: operator[] (unordered_map.h:985)
      n2: 11200 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 11200 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 11200 0x401689: allocate (new_allocator.h:114)
  n1: 11200 0x401689: allocate (alloc_traits.h:444)
   n1: 11200 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 11200 0x401689: operator[] (hashtable_policy.h:701)
     n1: 11200 0x401689: operator[] (unordered_map.h:985)
      n2: 11200 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 11200 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n0: 9208 in 8 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403E19: main (lexm_spacebn.cpp:11)
           n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403E19: main (lexm_spacebn.cpp:11)
           n0: 0 in 13 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403E0F: main (lexm_spacebn.cpp:10)
             n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 7232 0x40520B: allocate (new_allocator.h:114)
  n1: 7232 0x40520B: allocate (alloc_traits.h:444)
   n1: 7232 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 7232 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 7232 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 7232 0x40341B: operator[] (stl_map.h:499)
       n2: 7232 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 7232 0x403E19: main (lexm_spacebn.cpp:11)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 6144 0x40235B: allocate (new_allocator.h:114)
  n1: 6144 0x40235B: allocate (alloc_traits.h:444)
   n1: 6144 0x40235B: _M_allocate (stl_vector.h:343)
    n1: 6144 0x40235B: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 6144 0x40235B: push_back (stl_vector.h:1195)
      n2: 6144 0x40235B: graph_algorithms::lexm(Graph&) (lexm.h:92)
       n0: 6144 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 4520 0x401AF9: allocate (new_allocator.h:114)
  n1: 4520 0x401AF9: allocate (alloc_traits.h:444)
   n1: 4520 0x401AF9: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 4520 0x401AF9: operator[] (hashtable_policy.h:701)
     n1: 4520 0x401AF9: operator[] (unordered_map.h:985)
      n2: 4520 0x401AF9: graph_algorithms::lexm(Graph&) (lexm.h:55)
       n0: 4520 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 4096 0x401731: allocate (new_allocator.h:114)
  n1: 4096 0x401731: allocate (alloc_traits.h:444)
   n1: 4096 0x401731: _M_allocate (stl_vector.h:343)
    n1: 4096 0x401731: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4096 0x401731: push_back (stl_vector.h:1195)
      n2: 4096 0x401731: graph_algorithms::lexm(Graph&) (lexm.h:31)
       n0: 4096 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 4096 0x405644: allocate (new_allocator.h:114)
  n1: 4096 0x405644: allocate (alloc_traits.h:444)
   n1: 4096 0x405644: _M_allocate (stl_vector.h:343)
    n1: 4096 0x405644: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4096 0x405644: push_back (stl_vector.h:1195)
      n1: 4096 0x405644: Graph::addNode(int) (graph.cpp:13)
       n2: 4096 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
        n0: 4096 0x403E0F: main (lexm_spacebn.cpp:10)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
#-----------
snapshot=22
#-----------
time=4951328011
mem_heap_B=323696
mem_heap_extra_B=43944
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=23
#-----------
time=5163981937
mem_heap_B=348880
mem_heap_extra_B=48448
mem_stacks_B=0
heap_tree=detailed
n17: 348880 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 66688 0x405965: allocate (new_allocator.h:114)
  n1: 66688 0x405965: allocate (alloc_traits.h:444)
   n1: 66688 0x405965: _M_allocate (stl_vector.h:343)
    n1: 66688 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 66688 0x405965: push_back (stl_vector.h:1195)
      n1: 66688 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 66688 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 66688 0x403E0F: main (lexm_spacebn.cpp:10)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 38784 0x405B10: allocate (new_allocator.h:114)
  n1: 38784 0x405B10: allocate (alloc_traits.h:444)
   n1: 38784 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 38784 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 38784 0x405B10: push_back (stl_vector.h:1195)
      n1: 38784 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 38784 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 38784 0x403E0F: main (lexm_spacebn.cpp:10)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 28000 0x404D3A: allocate (new_allocator.h:114)
  n1: 28000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 28000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 28000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 28000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 28000 0x4017C5: operator[] (stl_map.h:499)
       n2: 28000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 28000 0x403E19: main (lexm_spacebn.cpp:11)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 28000 0x408B97: allocate (new_allocator.h:114)
  n1: 28000 0x408B97: allocate (alloc_traits.h:444)
   n1: 28000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 28000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 28000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 28000 0x4055B6: insert (unordered_map.h:586)
       n1: 28000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 28000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 28000 0x403E0F: main (lexm_spacebn.cpp:10)
         n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 22072 0x404BC2: allocate (new_allocator.h:114)
  n1: 22072 0x404BC2: allocate (alloc_traits.h:444)
   n1: 22072 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 22072 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 22072 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 22072 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 22072 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 13200 0x408796: operator[] (hashtable_policy.h:704)
         n1: 13200 0x408796: operator[] (unordered_map.h:985)
          n1: 13200 0x408796: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
           n2: 13200 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
            n0: 13200 0x403E19: main (lexm_spacebn.cpp:11)
            n0: 0 in 13 places, all below massif's threshold (1.00%)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403E19: main (lexm_spacebn.cpp:11)
           n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 12608 0x402429: allocate (new_allocator.h:114)
  n1: 12608 0x402429: allocate (alloc_traits.h:444)
   n1: 12608 0x402429: _M_allocate (stl_vector.h:343)
    n1: 12608 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 12608 0x402429: push_back (stl_vector.h:1195)
      n2: 12608 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 12608 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 11200 0x401539: allocate (new_allocator.h:114)
  n1: 11200 0x401539: allocate (alloc_traits.h:444)
   n1: 11200 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 11200 0x401539: operator[] (hashtable_policy.h:701)
     n1: 11200 0x401539: operator[] (unordered_map.h:985)
      n2: 11200 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 11200 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 11200 0x401689: allocate (new_allocator.h:114)
  n1: 11200 0x401689: allocate (alloc_traits.h:444)
   n1: 11200 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 11200 0x401689: operator[] (hashtable_policy.h:701)
     n1: 11200 0x401689: operator[] (unordered_map.h:985)
      n2: 11200 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 11200 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n0: 9416 in 8 places, all below massif's threshold (1.00%)
 n1: 8960 0x40235B: allocate (new_allocator.h:114)
  n1: 8960 0x40235B: allocate (alloc_traits.h:444)
   n1: 8960 0x40235B: _M_allocate (stl_vector.h:343)
    n1: 8960 0x40235B: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 8960 0x40235B: push_back (stl_vector.h:1195)
      n2: 8960 0x40235B: graph_algorithms::lexm(Graph&) (lexm.h:92)
       n0: 8960 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403E19: main (lexm_spacebn.cpp:11)
           n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403E0F: main (lexm_spacebn.cpp:10)
             n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 8672 0x408769: allocate (new_allocator.h:114)
  n1: 8672 0x408769: allocate (alloc_traits.h:444)
   n1: 8672 0x408769: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 8672 0x408769: operator[] (hashtable_policy.h:701)
     n1: 8672 0x408769: operator[] (unordered_map.h:985)
      n1: 8672 0x408769: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
       n2: 8672 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
        n0: 8672 0x403E19: main (lexm_spacebn.cpp:11)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 4640 0x401AF9: allocate (new_allocator.h:114)
  n1: 4640 0x401AF9: allocate (alloc_traits.h:444)
   n1: 4640 0x401AF9: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 4640 0x401AF9: operator[] (hashtable_policy.h:701)
     n1: 4640 0x401AF9: operator[] (unordered_map.h:985)
      n2: 4640 0x401AF9: graph_algorithms::lexm(Graph&) (lexm.h:55)
       n0: 4640 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 4096 0x401731: allocate (new_allocator.h:114)
  n1: 4096 0x401731: allocate (alloc_traits.h:444)
   n1: 4096 0x401731: _M_allocate (stl_vector.h:343)
    n1: 4096 0x401731: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4096 0x401731: push_back (stl_vector.h:1195)
      n2: 4096 0x401731: graph_algorithms::lexm(Graph&) (lexm.h:31)
       n0: 4096 0x403E19: main (lexm_spacebn.cpp:11)
       n0: 0 in 13 places, all below massif's threshold (1.00%)
 n1: 4096 0x405644: allocate (new_allocator.h:114)
  n1: 4096 0x405644: allocate (alloc_traits.h:444)
   n1: 4096 0x405644: _M_allocate (stl_vector.h:343)
    n1: 4096 0x405644: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4096 0x405644: push_back (stl_vector.h:1195)
      n1: 4096 0x405644: Graph::addNode(int) (graph.cpp:13)
       n2: 4096 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
        n0: 4096 0x403E0F: main (lexm_spacebn.cpp:10)
        n0: 0 in 13 places, all below massif's threshold (1.00%)
#-----------
snapshot=24
#-----------
time=5423949779
mem_heap_B=337280
mem_heap_extra_B=44120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=25
#-----------
time=5616112963
mem_heap_B=365860
mem_heap_extra_B=47820
mem_stacks_B=0
heap_tree=detailed
n14: 365860 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 66176 0x405965: allocate (new_allocator.h:114)
  n1: 66176 0x405965: allocate (alloc_traits.h:444)
   n1: 66176 0x405965: _M_allocate (stl_vector.h:343)
    n1: 66176 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 66176 0x405965: push_back (stl_vector.h:1195)
      n1: 66176 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 66176 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 66176 0x403E42: main (lexm_spacebn.cpp:10)
        n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 64640 0x405B10: allocate (new_allocator.h:114)
  n1: 64640 0x405B10: allocate (alloc_traits.h:444)
   n1: 64640 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 64640 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 64640 0x405B10: push_back (stl_vector.h:1195)
      n1: 64640 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 64640 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 64640 0x403E42: main (lexm_spacebn.cpp:10)
        n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 30000 0x404D3A: allocate (new_allocator.h:114)
  n1: 30000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 30000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 30000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 30000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 30000 0x4017C5: operator[] (stl_map.h:499)
       n2: 30000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 30000 0x403E4C: main (lexm_spacebn.cpp:11)
        n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 30000 0x408B97: allocate (new_allocator.h:114)
  n1: 30000 0x408B97: allocate (alloc_traits.h:444)
   n1: 30000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 30000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 30000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 30000 0x4055B6: insert (unordered_map.h:586)
       n1: 30000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 30000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 30000 0x403E42: main (lexm_spacebn.cpp:10)
         n0: 0 in 14 places, all below massif's threshold (1.00%)
 n0: 22284 in 11 places, all below massif's threshold (1.00%)
 n1: 19328 0x402429: allocate (new_allocator.h:114)
  n1: 19328 0x402429: allocate (alloc_traits.h:444)
   n1: 19328 0x402429: _M_allocate (stl_vector.h:343)
    n1: 19328 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 19328 0x402429: push_back (stl_vector.h:1195)
      n2: 19328 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 19328 0x403E4C: main (lexm_spacebn.cpp:11)
       n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 12000 0x401539: allocate (new_allocator.h:114)
  n1: 12000 0x401539: allocate (alloc_traits.h:444)
   n1: 12000 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 12000 0x401539: operator[] (hashtable_policy.h:701)
     n1: 12000 0x401539: operator[] (unordered_map.h:985)
      n2: 12000 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 12000 0x403E4C: main (lexm_spacebn.cpp:11)
       n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 12000 0x401689: allocate (new_allocator.h:114)
  n1: 12000 0x401689: allocate (alloc_traits.h:444)
   n1: 12000 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 12000 0x401689: operator[] (hashtable_policy.h:701)
     n1: 12000 0x401689: operator[] (unordered_map.h:985)
      n2: 12000 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 12000 0x403E4C: main (lexm_spacebn.cpp:11)
       n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403E4C: main (lexm_spacebn.cpp:11)
           n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403E4C: main (lexm_spacebn.cpp:11)
           n0: 0 in 14 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403E42: main (lexm_spacebn.cpp:10)
             n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 5504 0x40520B: allocate (new_allocator.h:114)
  n1: 5504 0x40520B: allocate (alloc_traits.h:444)
   n1: 5504 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 5504 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 5504 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 5504 0x40341B: operator[] (stl_map.h:499)
       n2: 5504 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 5504 0x403E4C: main (lexm_spacebn.cpp:11)
        n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 4608 0x40235B: allocate (new_allocator.h:114)
  n1: 4608 0x40235B: allocate (alloc_traits.h:444)
   n1: 4608 0x40235B: _M_allocate (stl_vector.h:343)
    n1: 4608 0x40235B: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 4608 0x40235B: push_back (stl_vector.h:1195)
      n2: 4608 0x40235B: graph_algorithms::lexm(Graph&) (lexm.h:92)
       n0: 4608 0x403E4C: main (lexm_spacebn.cpp:11)
       n0: 0 in 14 places, all below massif's threshold (1.00%)
#-----------
snapshot=26
#-----------
time=5868943236
mem_heap_B=360944
mem_heap_extra_B=46888
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=27
#-----------
time=6115994100
mem_heap_B=372212
mem_heap_extra_B=49916
mem_stacks_B=0
heap_tree=detailed
n15: 372212 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 66176 0x405965: allocate (new_allocator.h:114)
  n1: 66176 0x405965: allocate (alloc_traits.h:444)
   n1: 66176 0x405965: _M_allocate (stl_vector.h:343)
    n1: 66176 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 66176 0x405965: push_back (stl_vector.h:1195)
      n1: 66176 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 66176 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 66176 0x403E42: main (lexm_spacebn.cpp:10)
        n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 64640 0x405B10: allocate (new_allocator.h:114)
  n1: 64640 0x405B10: allocate (alloc_traits.h:444)
   n1: 64640 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 64640 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 64640 0x405B10: push_back (stl_vector.h:1195)
      n1: 64640 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 64640 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 64640 0x403E42: main (lexm_spacebn.cpp:10)
        n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 30000 0x404D3A: allocate (new_allocator.h:114)
  n1: 30000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 30000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 30000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 30000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 30000 0x4017C5: operator[] (stl_map.h:499)
       n2: 30000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 30000 0x403E4C: main (lexm_spacebn.cpp:11)
        n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 30000 0x408B97: allocate (new_allocator.h:114)
  n1: 30000 0x408B97: allocate (alloc_traits.h:444)
   n1: 30000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 30000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 30000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 30000 0x4055B6: insert (unordered_map.h:586)
       n1: 30000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 30000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 30000 0x403E42: main (lexm_spacebn.cpp:10)
         n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 22992 0x402429: allocate (new_allocator.h:114)
  n1: 22992 0x402429: allocate (alloc_traits.h:444)
   n1: 22992 0x402429: _M_allocate (stl_vector.h:343)
    n1: 22992 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 22992 0x402429: push_back (stl_vector.h:1195)
      n2: 22992 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 22992 0x403E4C: main (lexm_spacebn.cpp:11)
       n0: 0 in 14 places, all below massif's threshold (1.00%)
 n0: 17452 in 10 places, all below massif's threshold (1.00%)
 n1: 12000 0x401539: allocate (new_allocator.h:114)
  n1: 12000 0x401539: allocate (alloc_traits.h:444)
   n1: 12000 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 12000 0x401539: operator[] (hashtable_policy.h:701)
     n1: 12000 0x401539: operator[] (unordered_map.h:985)
      n2: 12000 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 12000 0x403E4C: main (lexm_spacebn.cpp:11)
       n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 12000 0x401689: allocate (new_allocator.h:114)
  n1: 12000 0x401689: allocate (alloc_traits.h:444)
   n1: 12000 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 12000 0x401689: operator[] (hashtable_policy.h:701)
     n1: 12000 0x401689: operator[] (unordered_map.h:985)
      n2: 12000 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 12000 0x403E4C: main (lexm_spacebn.cpp:11)
       n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403E4C: main (lexm_spacebn.cpp:11)
           n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403E4C: main (lexm_spacebn.cpp:11)
           n0: 0 in 14 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403E42: main (lexm_spacebn.cpp:10)
             n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 7360 0x40520B: allocate (new_allocator.h:114)
  n1: 7360 0x40520B: allocate (alloc_traits.h:444)
   n1: 7360 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 7360 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 7360 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 7360 0x40341B: operator[] (stl_map.h:499)
       n2: 7360 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 7360 0x403E4C: main (lexm_spacebn.cpp:11)
        n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 5632 0x40235B: allocate (new_allocator.h:114)
  n1: 5632 0x40235B: allocate (alloc_traits.h:444)
   n1: 5632 0x40235B: _M_allocate (stl_vector.h:343)
    n1: 5632 0x40235B: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 5632 0x40235B: push_back (stl_vector.h:1195)
      n2: 5632 0x40235B: graph_algorithms::lexm(Graph&) (lexm.h:92)
       n0: 5632 0x403E4C: main (lexm_spacebn.cpp:11)
       n0: 0 in 14 places, all below massif's threshold (1.00%)
 n1: 4640 0x401AF9: allocate (new_allocator.h:114)
  n1: 4640 0x401AF9: allocate (alloc_traits.h:444)
   n1: 4640 0x401AF9: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 4640 0x401AF9: operator[] (hashtable_policy.h:701)
     n1: 4640 0x401AF9: operator[] (unordered_map.h:985)
      n2: 4640 0x401AF9: graph_algorithms::lexm(Graph&) (lexm.h:55)
       n0: 4640 0x403E4C: main (lexm_spacebn.cpp:11)
       n0: 0 in 14 places, all below massif's threshold (1.00%)
#-----------
snapshot=28
#-----------
time=6245913146
mem_heap_B=363208
mem_heap_extra_B=47088
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=29
#-----------
time=6440852775
mem_heap_B=371568
mem_heap_extra_B=49944
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=30
#-----------
time=6676582106
mem_heap_B=193440
mem_heap_extra_B=19936
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=31
#-----------
time=6871521419
mem_heap_B=370520
mem_heap_extra_B=47232
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=32
#-----------
time=7066683485
mem_heap_B=381568
mem_heap_extra_B=49160
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=33
#-----------
time=7317148817
mem_heap_B=396960
mem_heap_extra_B=52672
mem_stacks_B=0
heap_tree=detailed
n15: 396960 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 89472 0x405B10: allocate (new_allocator.h:114)
  n1: 89472 0x405B10: allocate (alloc_traits.h:444)
   n1: 89472 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 89472 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 89472 0x405B10: push_back (stl_vector.h:1195)
      n1: 89472 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 89472 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 89472 0x403E75: main (lexm_spacebn.cpp:10)
        n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 68096 0x405965: allocate (new_allocator.h:114)
  n1: 68096 0x405965: allocate (alloc_traits.h:444)
   n1: 68096 0x405965: _M_allocate (stl_vector.h:343)
    n1: 68096 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 68096 0x405965: push_back (stl_vector.h:1195)
      n1: 68096 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 68096 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 68096 0x403E75: main (lexm_spacebn.cpp:10)
        n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 32000 0x404D3A: allocate (new_allocator.h:114)
  n1: 32000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 32000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 32000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 32000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 32000 0x4017C5: operator[] (stl_map.h:499)
       n2: 32000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 32000 0x403E7F: main (lexm_spacebn.cpp:11)
        n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 32000 0x408B97: allocate (new_allocator.h:114)
  n1: 32000 0x408B97: allocate (alloc_traits.h:444)
   n1: 32000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 32000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 32000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 32000 0x4055B6: insert (unordered_map.h:586)
       n1: 32000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 32000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 32000 0x403E75: main (lexm_spacebn.cpp:10)
         n0: 0 in 15 places, all below massif's threshold (1.00%)
 n0: 18944 in 10 places, all below massif's threshold (1.00%)
 n1: 14656 0x402429: allocate (new_allocator.h:114)
  n1: 14656 0x402429: allocate (alloc_traits.h:444)
   n1: 14656 0x402429: _M_allocate (stl_vector.h:343)
    n1: 14656 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 14656 0x402429: push_back (stl_vector.h:1195)
      n2: 14656 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 14656 0x403E7F: main (lexm_spacebn.cpp:11)
       n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 12800 0x401539: allocate (new_allocator.h:114)
  n1: 12800 0x401539: allocate (alloc_traits.h:444)
   n1: 12800 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 12800 0x401539: operator[] (hashtable_policy.h:701)
     n1: 12800 0x401539: operator[] (unordered_map.h:985)
      n2: 12800 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 12800 0x403E7F: main (lexm_spacebn.cpp:11)
       n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 12800 0x401689: allocate (new_allocator.h:114)
  n1: 12800 0x401689: allocate (alloc_traits.h:444)
   n1: 12800 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 12800 0x401689: operator[] (hashtable_policy.h:701)
     n1: 12800 0x401689: operator[] (unordered_map.h:985)
      n2: 12800 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 12800 0x403E7F: main (lexm_spacebn.cpp:11)
       n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403E7F: main (lexm_spacebn.cpp:11)
           n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403E7F: main (lexm_spacebn.cpp:11)
           n0: 0 in 15 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403E75: main (lexm_spacebn.cpp:10)
             n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 7232 0x40520B: allocate (new_allocator.h:114)
  n1: 7232 0x40520B: allocate (alloc_traits.h:444)
   n1: 7232 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 7232 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 7232 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 7232 0x40341B: operator[] (stl_map.h:499)
       n2: 7232 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 7232 0x403E7F: main (lexm_spacebn.cpp:11)
        n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 5120 0x40235B: allocate (new_allocator.h:114)
  n1: 5120 0x40235B: allocate (alloc_traits.h:444)
   n1: 5120 0x40235B: _M_allocate (stl_vector.h:343)
    n1: 5120 0x40235B: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 5120 0x40235B: push_back (stl_vector.h:1195)
      n2: 5120 0x40235B: graph_algorithms::lexm(Graph&) (lexm.h:92)
       n0: 5120 0x403E7F: main (lexm_spacebn.cpp:11)
       n0: 0 in 15 places, all below massif's threshold (1.00%)
 n1: 4520 0x401AF9: allocate (new_allocator.h:114)
  n1: 4520 0x401AF9: allocate (alloc_traits.h:444)
   n1: 4520 0x401AF9: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 4520 0x401AF9: operator[] (hashtable_policy.h:701)
     n1: 4520 0x401AF9: operator[] (unordered_map.h:985)
      n2: 4520 0x401AF9: graph_algorithms::lexm(Graph&) (lexm.h:55)
       n0: 4520 0x403E7F: main (lexm_spacebn.cpp:11)
       n0: 0 in 15 places, all below massif's threshold (1.00%)
#-----------
snapshot=34
#-----------
time=7576990663
mem_heap_B=388240
mem_heap_extra_B=50112
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=35
#-----------
time=7771866805
mem_heap_B=389208
mem_heap_extra_B=50224
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=36
#-----------
time=7901807129
mem_heap_B=389208
mem_heap_extra_B=50224
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=37
#-----------
time=8096802579
mem_heap_B=389592
mem_heap_extra_B=50224
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=38
#-----------
time=8326425176
mem_heap_B=195040
mem_heap_extra_B=21136
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=39
#-----------
time=8586381277
mem_heap_B=410004
mem_heap_extra_B=49972
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=40
#-----------
time=8819151421
mem_heap_B=440008
mem_heap_extra_B=54136
mem_stacks_B=0
heap_tree=detailed
n13: 440008 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 120320 0x405B10: allocate (new_allocator.h:114)
  n1: 120320 0x405B10: allocate (alloc_traits.h:444)
   n1: 120320 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 120320 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 120320 0x405B10: push_back (stl_vector.h:1195)
      n1: 120320 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 120320 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 120320 0x403EA8: main (lexm_spacebn.cpp:10)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 66176 0x405965: allocate (new_allocator.h:114)
  n1: 66176 0x405965: allocate (alloc_traits.h:444)
   n1: 66176 0x405965: _M_allocate (stl_vector.h:343)
    n1: 66176 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 66176 0x405965: push_back (stl_vector.h:1195)
      n1: 66176 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 66176 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 66176 0x403EA8: main (lexm_spacebn.cpp:10)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 34000 0x404D3A: allocate (new_allocator.h:114)
  n1: 34000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 34000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 34000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 34000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 34000 0x4017C5: operator[] (stl_map.h:499)
       n2: 34000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 34000 0x403EB2: main (lexm_spacebn.cpp:11)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 34000 0x408B97: allocate (new_allocator.h:114)
  n1: 34000 0x408B97: allocate (alloc_traits.h:444)
   n1: 34000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 34000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 34000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 34000 0x4055B6: insert (unordered_map.h:586)
       n1: 34000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 34000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 34000 0x403EA8: main (lexm_spacebn.cpp:10)
         n0: 0 in 16 places, all below massif's threshold (1.00%)
 n0: 27984 in 12 places, all below massif's threshold (1.00%)
 n1: 24352 0x402429: allocate (new_allocator.h:114)
  n1: 24352 0x402429: allocate (alloc_traits.h:444)
   n1: 24352 0x402429: _M_allocate (stl_vector.h:343)
    n1: 24352 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 24352 0x402429: push_back (stl_vector.h:1195)
      n2: 24352 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 24352 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 13600 0x401539: allocate (new_allocator.h:114)
  n1: 13600 0x401539: allocate (alloc_traits.h:444)
   n1: 13600 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 13600 0x401539: operator[] (hashtable_policy.h:701)
     n1: 13600 0x401539: operator[] (unordered_map.h:985)
      n2: 13600 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 13600 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 13600 0x401689: allocate (new_allocator.h:114)
  n1: 13600 0x401689: allocate (alloc_traits.h:444)
   n1: 13600 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 13600 0x401689: operator[] (hashtable_policy.h:701)
     n1: 13600 0x401689: operator[] (unordered_map.h:985)
      n2: 13600 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 13600 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403EB2: main (lexm_spacebn.cpp:11)
           n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403EB2: main (lexm_spacebn.cpp:11)
           n0: 0 in 16 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403EA8: main (lexm_spacebn.cpp:10)
             n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 6656 0x40520B: allocate (new_allocator.h:114)
  n1: 6656 0x40520B: allocate (alloc_traits.h:444)
   n1: 6656 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 6656 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 6656 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 6656 0x40341B: operator[] (stl_map.h:499)
       n2: 6656 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 6656 0x403EB2: main (lexm_spacebn.cpp:11)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
#-----------
snapshot=41
#-----------
time=9125028742
mem_heap_B=435816
mem_heap_extra_B=52416
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=42
#-----------
time=9384900469
mem_heap_B=435984
mem_heap_extra_B=52440
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=43
#-----------
time=9514965524
mem_heap_B=435984
mem_heap_extra_B=52440
mem_stacks_B=0
heap_tree=detailed
n13: 435984 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 120320 0x405B10: allocate (new_allocator.h:114)
  n1: 120320 0x405B10: allocate (alloc_traits.h:444)
   n1: 120320 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 120320 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 120320 0x405B10: push_back (stl_vector.h:1195)
      n1: 120320 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 120320 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 120320 0x403EA8: main (lexm_spacebn.cpp:10)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 66176 0x405965: allocate (new_allocator.h:114)
  n1: 66176 0x405965: allocate (alloc_traits.h:444)
   n1: 66176 0x405965: _M_allocate (stl_vector.h:343)
    n1: 66176 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 66176 0x405965: push_back (stl_vector.h:1195)
      n1: 66176 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 66176 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 66176 0x403EA8: main (lexm_spacebn.cpp:10)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 34000 0x404D3A: allocate (new_allocator.h:114)
  n1: 34000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 34000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 34000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 34000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 34000 0x4017C5: operator[] (stl_map.h:499)
       n2: 34000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 34000 0x403EB2: main (lexm_spacebn.cpp:11)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 34000 0x408B97: allocate (new_allocator.h:114)
  n1: 34000 0x408B97: allocate (alloc_traits.h:444)
   n1: 34000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 34000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 34000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 34000 0x4055B6: insert (unordered_map.h:586)
       n1: 34000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 34000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 34000 0x403EA8: main (lexm_spacebn.cpp:10)
         n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 29568 0x402429: allocate (new_allocator.h:114)
  n1: 29568 0x402429: allocate (alloc_traits.h:444)
   n1: 29568 0x402429: _M_allocate (stl_vector.h:343)
    n1: 29568 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 29568 0x402429: push_back (stl_vector.h:1195)
      n2: 29568 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 29568 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
 n0: 20360 in 12 places, all below massif's threshold (1.00%)
 n1: 13600 0x401539: allocate (new_allocator.h:114)
  n1: 13600 0x401539: allocate (alloc_traits.h:444)
   n1: 13600 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 13600 0x401539: operator[] (hashtable_policy.h:701)
     n1: 13600 0x401539: operator[] (unordered_map.h:985)
      n2: 13600 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 13600 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 13600 0x401689: allocate (new_allocator.h:114)
  n1: 13600 0x401689: allocate (alloc_traits.h:444)
   n1: 13600 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 13600 0x401689: operator[] (hashtable_policy.h:701)
     n1: 13600 0x401689: operator[] (unordered_map.h:985)
      n2: 13600 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 13600 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403EB2: main (lexm_spacebn.cpp:11)
           n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403EB2: main (lexm_spacebn.cpp:11)
           n0: 0 in 16 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403EA8: main (lexm_spacebn.cpp:10)
             n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 5040 0x401AF9: allocate (new_allocator.h:114)
  n1: 5040 0x401AF9: allocate (alloc_traits.h:444)
   n1: 5040 0x401AF9: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 5040 0x401AF9: operator[] (hashtable_policy.h:701)
     n1: 5040 0x401AF9: operator[] (unordered_map.h:985)
      n2: 5040 0x401AF9: graph_algorithms::lexm(Graph&) (lexm.h:55)
       n0: 5040 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
#-----------
snapshot=44
#-----------
time=9774839507
mem_heap_B=437776
mem_heap_extra_B=52488
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=45
#-----------
time=9904862915
mem_heap_B=437956
mem_heap_extra_B=52548
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=46
#-----------
time=10146694960
mem_heap_B=463740
mem_heap_extra_B=57012
mem_stacks_B=0
heap_tree=detailed
n14: 463740 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 120320 0x405B10: allocate (new_allocator.h:114)
  n1: 120320 0x405B10: allocate (alloc_traits.h:444)
   n1: 120320 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 120320 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 120320 0x405B10: push_back (stl_vector.h:1195)
      n1: 120320 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 120320 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 120320 0x403EA8: main (lexm_spacebn.cpp:10)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 66176 0x405965: allocate (new_allocator.h:114)
  n1: 66176 0x405965: allocate (alloc_traits.h:444)
   n1: 66176 0x405965: _M_allocate (stl_vector.h:343)
    n1: 66176 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 66176 0x405965: push_back (stl_vector.h:1195)
      n1: 66176 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 66176 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 66176 0x403EA8: main (lexm_spacebn.cpp:10)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 34000 0x404D3A: allocate (new_allocator.h:114)
  n1: 34000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 34000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 34000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 34000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 34000 0x4017C5: operator[] (stl_map.h:499)
       n2: 34000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 34000 0x403EB2: main (lexm_spacebn.cpp:11)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 34000 0x408B97: allocate (new_allocator.h:114)
  n1: 34000 0x408B97: allocate (alloc_traits.h:444)
   n1: 34000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 34000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 34000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 34000 0x4055B6: insert (unordered_map.h:586)
       n1: 34000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 34000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 34000 0x403EA8: main (lexm_spacebn.cpp:10)
         n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 28804 0x402429: allocate (new_allocator.h:114)
  n1: 28804 0x402429: allocate (alloc_traits.h:444)
   n1: 28804 0x402429: _M_allocate (stl_vector.h:343)
    n1: 28804 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 28804 0x402429: push_back (stl_vector.h:1195)
      n2: 28804 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 28804 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
 n0: 25648 in 11 places, all below massif's threshold (1.00%)
 n1: 22072 0x404BC2: allocate (new_allocator.h:114)
  n1: 22072 0x404BC2: allocate (alloc_traits.h:444)
   n1: 22072 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 22072 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 22072 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 22072 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 22072 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 13200 0x408796: operator[] (hashtable_policy.h:704)
         n1: 13200 0x408796: operator[] (unordered_map.h:985)
          n1: 13200 0x408796: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
           n2: 13200 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
            n0: 13200 0x403EB2: main (lexm_spacebn.cpp:11)
            n0: 0 in 16 places, all below massif's threshold (1.00%)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403EB2: main (lexm_spacebn.cpp:11)
           n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 13600 0x401539: allocate (new_allocator.h:114)
  n1: 13600 0x401539: allocate (alloc_traits.h:444)
   n1: 13600 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 13600 0x401539: operator[] (hashtable_policy.h:701)
     n1: 13600 0x401539: operator[] (unordered_map.h:985)
      n2: 13600 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 13600 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 13600 0x401689: allocate (new_allocator.h:114)
  n1: 13600 0x401689: allocate (alloc_traits.h:444)
   n1: 13600 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 13600 0x401689: operator[] (hashtable_policy.h:701)
     n1: 13600 0x401689: operator[] (unordered_map.h:985)
      n2: 13600 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 13600 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403EB2: main (lexm_spacebn.cpp:11)
           n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403EA8: main (lexm_spacebn.cpp:10)
             n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 8672 0x408769: allocate (new_allocator.h:114)
  n1: 8672 0x408769: allocate (alloc_traits.h:444)
   n1: 8672 0x408769: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 8672 0x408769: operator[] (hashtable_policy.h:701)
     n1: 8672 0x408769: operator[] (unordered_map.h:985)
      n1: 8672 0x408769: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
       n2: 8672 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
        n0: 8672 0x403EB2: main (lexm_spacebn.cpp:11)
        n0: 0 in 16 places, all below massif's threshold (1.00%)
 n1: 6400 0x40235B: allocate (new_allocator.h:114)
  n1: 6400 0x40235B: allocate (alloc_traits.h:444)
   n1: 6400 0x40235B: _M_allocate (stl_vector.h:343)
    n1: 6400 0x40235B: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 6400 0x40235B: push_back (stl_vector.h:1195)
      n2: 6400 0x40235B: graph_algorithms::lexm(Graph&) (lexm.h:92)
       n0: 6400 0x403EB2: main (lexm_spacebn.cpp:11)
       n0: 0 in 16 places, all below massif's threshold (1.00%)
#-----------
snapshot=47
#-----------
time=10276795365
mem_heap_B=197052
mem_heap_extra_B=22516
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=48
#-----------
time=10472013768
mem_heap_B=437784
mem_heap_extra_B=52296
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=49
#-----------
time=10666944640
mem_heap_B=451904
mem_heap_extra_B=53544
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=50
#-----------
time=10767559720
mem_heap_B=470104
mem_heap_extra_B=55896
mem_stacks_B=0
heap_tree=detailed
n12: 470104 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 145920 0x405B10: allocate (new_allocator.h:114)
  n1: 145920 0x405B10: allocate (alloc_traits.h:444)
   n1: 145920 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 145920 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 145920 0x405B10: push_back (stl_vector.h:1195)
      n1: 145920 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 145920 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 145920 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 70400 0x405965: allocate (new_allocator.h:114)
  n1: 70400 0x405965: allocate (alloc_traits.h:444)
   n1: 70400 0x405965: _M_allocate (stl_vector.h:343)
    n1: 70400 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 70400 0x405965: push_back (stl_vector.h:1195)
      n1: 70400 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 70400 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 70400 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x404D3A: allocate (new_allocator.h:114)
  n1: 36000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 36000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 36000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 36000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 36000 0x4017C5: operator[] (stl_map.h:499)
       n2: 36000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 36000 0x403EE5: main (lexm_spacebn.cpp:11)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x408B97: allocate (new_allocator.h:114)
  n1: 36000 0x408B97: allocate (alloc_traits.h:444)
   n1: 36000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 36000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 36000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 36000 0x4055B6: insert (unordered_map.h:586)
       n1: 36000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 36000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 36000 0x403EDB: main (lexm_spacebn.cpp:10)
         n0: 0 in 17 places, all below massif's threshold (1.00%)
 n0: 33312 in 13 places, all below massif's threshold (1.00%)
 n1: 20352 0x402429: allocate (new_allocator.h:114)
  n1: 20352 0x402429: allocate (alloc_traits.h:444)
   n1: 20352 0x402429: _M_allocate (stl_vector.h:343)
    n1: 20352 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 20352 0x402429: push_back (stl_vector.h:1195)
      n2: 20352 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 20352 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401539: allocate (new_allocator.h:114)
  n1: 14400 0x401539: allocate (alloc_traits.h:444)
   n1: 14400 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401539: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401539: operator[] (unordered_map.h:985)
      n2: 14400 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401689: allocate (new_allocator.h:114)
  n1: 14400 0x401689: allocate (alloc_traits.h:444)
   n1: 14400 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401689: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401689: operator[] (unordered_map.h:985)
      n2: 14400 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403EDB: main (lexm_spacebn.cpp:10)
             n0: 0 in 17 places, all below massif's threshold (1.00%)
#-----------
snapshot=51
#-----------
time=10803197601
mem_heap_B=474452
mem_heap_extra_B=56860
mem_stacks_B=0
heap_tree=detailed
n13: 474452 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 145920 0x405B10: allocate (new_allocator.h:114)
  n1: 145920 0x405B10: allocate (alloc_traits.h:444)
   n1: 145920 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 145920 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 145920 0x405B10: push_back (stl_vector.h:1195)
      n1: 145920 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 145920 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 145920 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 70400 0x405965: allocate (new_allocator.h:114)
  n1: 70400 0x405965: allocate (alloc_traits.h:444)
   n1: 70400 0x405965: _M_allocate (stl_vector.h:343)
    n1: 70400 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 70400 0x405965: push_back (stl_vector.h:1195)
      n1: 70400 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 70400 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 70400 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x404D3A: allocate (new_allocator.h:114)
  n1: 36000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 36000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 36000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 36000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 36000 0x4017C5: operator[] (stl_map.h:499)
       n2: 36000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 36000 0x403EE5: main (lexm_spacebn.cpp:11)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x408B97: allocate (new_allocator.h:114)
  n1: 36000 0x408B97: allocate (alloc_traits.h:444)
   n1: 36000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 36000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 36000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 36000 0x4055B6: insert (unordered_map.h:586)
       n1: 36000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 36000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 36000 0x403EDB: main (lexm_spacebn.cpp:10)
         n0: 0 in 17 places, all below massif's threshold (1.00%)
 n0: 28572 in 12 places, all below massif's threshold (1.00%)
 n1: 23168 0x402429: allocate (new_allocator.h:114)
  n1: 23168 0x402429: allocate (alloc_traits.h:444)
   n1: 23168 0x402429: _M_allocate (stl_vector.h:343)
    n1: 23168 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 23168 0x402429: push_back (stl_vector.h:1195)
      n2: 23168 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 23168 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401539: allocate (new_allocator.h:114)
  n1: 14400 0x401539: allocate (alloc_traits.h:444)
   n1: 14400 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401539: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401539: operator[] (unordered_map.h:985)
      n2: 14400 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401689: allocate (new_allocator.h:114)
  n1: 14400 0x401689: allocate (alloc_traits.h:444)
   n1: 14400 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401689: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401689: operator[] (unordered_map.h:985)
      n2: 14400 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403EDB: main (lexm_spacebn.cpp:10)
             n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 6272 0x40520B: allocate (new_allocator.h:114)
  n1: 6272 0x40520B: allocate (alloc_traits.h:444)
   n1: 6272 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 6272 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 6272 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 6272 0x40341B: operator[] (stl_map.h:499)
       n2: 6272 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 6272 0x403EE5: main (lexm_spacebn.cpp:11)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
#-----------
snapshot=52
#-----------
time=10850496904
mem_heap_B=478992
mem_heap_extra_B=57648
mem_stacks_B=0
heap_tree=detailed
n13: 478992 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 145920 0x405B10: allocate (new_allocator.h:114)
  n1: 145920 0x405B10: allocate (alloc_traits.h:444)
   n1: 145920 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 145920 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 145920 0x405B10: push_back (stl_vector.h:1195)
      n1: 145920 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 145920 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 145920 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 70400 0x405965: allocate (new_allocator.h:114)
  n1: 70400 0x405965: allocate (alloc_traits.h:444)
   n1: 70400 0x405965: _M_allocate (stl_vector.h:343)
    n1: 70400 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 70400 0x405965: push_back (stl_vector.h:1195)
      n1: 70400 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 70400 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 70400 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x404D3A: allocate (new_allocator.h:114)
  n1: 36000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 36000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 36000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 36000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 36000 0x4017C5: operator[] (stl_map.h:499)
       n2: 36000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 36000 0x403EE5: main (lexm_spacebn.cpp:11)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x408B97: allocate (new_allocator.h:114)
  n1: 36000 0x408B97: allocate (alloc_traits.h:444)
   n1: 36000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 36000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 36000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 36000 0x4055B6: insert (unordered_map.h:586)
       n1: 36000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 36000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 36000 0x403EDB: main (lexm_spacebn.cpp:10)
         n0: 0 in 17 places, all below massif's threshold (1.00%)
 n0: 29208 in 12 places, all below massif's threshold (1.00%)
 n1: 26304 0x402429: allocate (new_allocator.h:114)
  n1: 26304 0x402429: allocate (alloc_traits.h:444)
   n1: 26304 0x402429: _M_allocate (stl_vector.h:343)
    n1: 26304 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 26304 0x402429: push_back (stl_vector.h:1195)
      n2: 26304 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 26304 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401539: allocate (new_allocator.h:114)
  n1: 14400 0x401539: allocate (alloc_traits.h:444)
   n1: 14400 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401539: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401539: operator[] (unordered_map.h:985)
      n2: 14400 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401689: allocate (new_allocator.h:114)
  n1: 14400 0x401689: allocate (alloc_traits.h:444)
   n1: 14400 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401689: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401689: operator[] (unordered_map.h:985)
      n2: 14400 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403EDB: main (lexm_spacebn.cpp:10)
             n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 7040 0x40520B: allocate (new_allocator.h:114)
  n1: 7040 0x40520B: allocate (alloc_traits.h:444)
   n1: 7040 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 7040 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 7040 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 7040 0x40341B: operator[] (stl_map.h:499)
       n2: 7040 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 7040 0x403EE5: main (lexm_spacebn.cpp:11)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
#-----------
snapshot=53
#-----------
time=10980549116
mem_heap_B=469016
mem_heap_extra_B=55336
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=54
#-----------
time=11110469524
mem_heap_B=469896
mem_heap_extra_B=55424
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=55
#-----------
time=11240627873
mem_heap_B=470224
mem_heap_extra_B=55472
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=56
#-----------
time=11370548846
mem_heap_B=470960
mem_heap_extra_B=55608
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=57
#-----------
time=11500467964
mem_heap_B=471200
mem_heap_extra_B=55656
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=58
#-----------
time=11630485735
mem_heap_B=471464
mem_heap_extra_B=55704
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=59
#-----------
time=11679334958
mem_heap_B=483252
mem_heap_extra_B=58796
mem_stacks_B=0
heap_tree=detailed
n13: 483252 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 145920 0x405B10: allocate (new_allocator.h:114)
  n1: 145920 0x405B10: allocate (alloc_traits.h:444)
   n1: 145920 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 145920 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 145920 0x405B10: push_back (stl_vector.h:1195)
      n1: 145920 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 145920 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 145920 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 70400 0x405965: allocate (new_allocator.h:114)
  n1: 70400 0x405965: allocate (alloc_traits.h:444)
   n1: 70400 0x405965: _M_allocate (stl_vector.h:343)
    n1: 70400 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 70400 0x405965: push_back (stl_vector.h:1195)
      n1: 70400 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 70400 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 70400 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x404D3A: allocate (new_allocator.h:114)
  n1: 36000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 36000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 36000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 36000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 36000 0x4017C5: operator[] (stl_map.h:499)
       n2: 36000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 36000 0x403EE5: main (lexm_spacebn.cpp:11)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x408B97: allocate (new_allocator.h:114)
  n1: 36000 0x408B97: allocate (alloc_traits.h:444)
   n1: 36000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 36000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 36000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 36000 0x4055B6: insert (unordered_map.h:586)
       n1: 36000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 36000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 36000 0x403EDB: main (lexm_spacebn.cpp:10)
         n0: 0 in 17 places, all below massif's threshold (1.00%)
 n0: 30268 in 12 places, all below massif's threshold (1.00%)
 n1: 28608 0x402429: allocate (new_allocator.h:114)
  n1: 28608 0x402429: allocate (alloc_traits.h:444)
   n1: 28608 0x402429: _M_allocate (stl_vector.h:343)
    n1: 28608 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 28608 0x402429: push_back (stl_vector.h:1195)
      n2: 28608 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 28608 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401539: allocate (new_allocator.h:114)
  n1: 14400 0x401539: allocate (alloc_traits.h:444)
   n1: 14400 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401539: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401539: operator[] (unordered_map.h:985)
      n2: 14400 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401689: allocate (new_allocator.h:114)
  n1: 14400 0x401689: allocate (alloc_traits.h:444)
   n1: 14400 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401689: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401689: operator[] (unordered_map.h:985)
      n2: 14400 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403EDB: main (lexm_spacebn.cpp:10)
             n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 7936 0x40520B: allocate (new_allocator.h:114)
  n1: 7936 0x40520B: allocate (alloc_traits.h:444)
   n1: 7936 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 7936 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 7936 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 7936 0x40341B: operator[] (stl_map.h:499)
       n2: 7936 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 7936 0x403EE5: main (lexm_spacebn.cpp:11)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
#-----------
snapshot=60
#-----------
time=11809256531
mem_heap_B=472736
mem_heap_extra_B=55704
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=61
#-----------
time=11939178294
mem_heap_B=473056
mem_heap_extra_B=55704
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=62
#-----------
time=12069097854
mem_heap_B=473440
mem_heap_extra_B=55704
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=63
#-----------
time=12199019956
mem_heap_B=473568
mem_heap_extra_B=55688
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=64
#-----------
time=12328940650
mem_heap_B=473568
mem_heap_extra_B=55688
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=65
#-----------
time=12407779677
mem_heap_B=499040
mem_heap_extra_B=60112
mem_stacks_B=0
heap_tree=detailed
n14: 499040 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 145920 0x405B10: allocate (new_allocator.h:114)
  n1: 145920 0x405B10: allocate (alloc_traits.h:444)
   n1: 145920 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 145920 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 145920 0x405B10: push_back (stl_vector.h:1195)
      n1: 145920 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 145920 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 145920 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 70400 0x405965: allocate (new_allocator.h:114)
  n1: 70400 0x405965: allocate (alloc_traits.h:444)
   n1: 70400 0x405965: _M_allocate (stl_vector.h:343)
    n1: 70400 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 70400 0x405965: push_back (stl_vector.h:1195)
      n1: 70400 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 70400 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 70400 0x403EDB: main (lexm_spacebn.cpp:10)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x404D3A: allocate (new_allocator.h:114)
  n1: 36000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 36000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 36000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 36000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 36000 0x4017C5: operator[] (stl_map.h:499)
       n2: 36000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 36000 0x403EE5: main (lexm_spacebn.cpp:11)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 36000 0x408B97: allocate (new_allocator.h:114)
  n1: 36000 0x408B97: allocate (alloc_traits.h:444)
   n1: 36000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 36000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 36000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 36000 0x4055B6: insert (unordered_map.h:586)
       n1: 36000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 36000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 36000 0x403EDB: main (lexm_spacebn.cpp:10)
         n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 27904 0x402429: allocate (new_allocator.h:114)
  n1: 27904 0x402429: allocate (alloc_traits.h:444)
   n1: 27904 0x402429: _M_allocate (stl_vector.h:343)
    n1: 27904 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 27904 0x402429: push_back (stl_vector.h:1195)
      n2: 27904 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 27904 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n0: 26168 in 11 places, all below massif's threshold (1.00%)
 n1: 22072 0x404BC2: allocate (new_allocator.h:114)
  n1: 22072 0x404BC2: allocate (alloc_traits.h:444)
   n1: 22072 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 22072 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 22072 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 22072 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 22072 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 13200 0x408796: operator[] (hashtable_policy.h:704)
         n1: 13200 0x408796: operator[] (unordered_map.h:985)
          n1: 13200 0x408796: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
           n2: 13200 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
            n0: 13200 0x403EE5: main (lexm_spacebn.cpp:11)
            n0: 0 in 17 places, all below massif's threshold (1.00%)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401539: allocate (new_allocator.h:114)
  n1: 14400 0x401539: allocate (alloc_traits.h:444)
   n1: 14400 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401539: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401539: operator[] (unordered_map.h:985)
      n2: 14400 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 14400 0x401689: allocate (new_allocator.h:114)
  n1: 14400 0x401689: allocate (alloc_traits.h:444)
   n1: 14400 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 14400 0x401689: operator[] (hashtable_policy.h:701)
     n1: 14400 0x401689: operator[] (unordered_map.h:985)
      n2: 14400 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 14400 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403EE5: main (lexm_spacebn.cpp:11)
           n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403EDB: main (lexm_spacebn.cpp:10)
             n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 8672 0x408769: allocate (new_allocator.h:114)
  n1: 8672 0x408769: allocate (alloc_traits.h:444)
   n1: 8672 0x408769: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 8672 0x408769: operator[] (hashtable_policy.h:701)
     n1: 8672 0x408769: operator[] (unordered_map.h:985)
      n1: 8672 0x408769: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
       n2: 8672 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
        n0: 8672 0x403EE5: main (lexm_spacebn.cpp:11)
        n0: 0 in 17 places, all below massif's threshold (1.00%)
 n1: 6656 0x40235B: allocate (new_allocator.h:114)
  n1: 6656 0x40235B: allocate (alloc_traits.h:444)
   n1: 6656 0x40235B: _M_allocate (stl_vector.h:343)
    n1: 6656 0x40235B: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 6656 0x40235B: push_back (stl_vector.h:1195)
      n2: 6656 0x40235B: graph_algorithms::lexm(Graph&) (lexm.h:92)
       n0: 6656 0x403EE5: main (lexm_spacebn.cpp:11)
       n0: 0 in 17 places, all below massif's threshold (1.00%)
#-----------
snapshot=66
#-----------
time=12537778074
mem_heap_B=198588
mem_heap_extra_B=23988
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=67
#-----------
time=12667740972
mem_heap_B=307096
mem_heap_extra_B=23320
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=68
#-----------
time=12797663075
mem_heap_B=466272
mem_heap_extra_B=55320
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=69
#-----------
time=12927582207
mem_heap_B=474760
mem_heap_extra_B=55968
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=70
#-----------
time=13057502626
mem_heap_B=483920
mem_heap_extra_B=56728
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=71
#-----------
time=13164432138
mem_heap_B=504908
mem_heap_extra_B=59860
mem_stacks_B=0
heap_tree=detailed
n13: 504908 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 150016 0x405B10: allocate (new_allocator.h:114)
  n1: 150016 0x405B10: allocate (alloc_traits.h:444)
   n1: 150016 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 150016 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 150016 0x405B10: push_back (stl_vector.h:1195)
      n1: 150016 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 150016 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 150016 0x403F0E: main (lexm_spacebn.cpp:10)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 86784 0x405965: allocate (new_allocator.h:114)
  n1: 86784 0x405965: allocate (alloc_traits.h:444)
   n1: 86784 0x405965: _M_allocate (stl_vector.h:343)
    n1: 86784 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 86784 0x405965: push_back (stl_vector.h:1195)
      n1: 86784 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 86784 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 86784 0x403F0E: main (lexm_spacebn.cpp:10)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 38000 0x404D3A: allocate (new_allocator.h:114)
  n1: 38000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 38000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 38000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 38000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 38000 0x4017C5: operator[] (stl_map.h:499)
       n2: 38000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 38000 0x403F18: main (lexm_spacebn.cpp:11)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 38000 0x408B97: allocate (new_allocator.h:114)
  n1: 38000 0x408B97: allocate (alloc_traits.h:444)
   n1: 38000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 38000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 38000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 38000 0x4055B6: insert (unordered_map.h:586)
       n1: 38000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 38000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 38000 0x403F0E: main (lexm_spacebn.cpp:10)
         n0: 0 in 18 places, all below massif's threshold (1.00%)
 n0: 30324 in 12 places, all below massif's threshold (1.00%)
 n1: 25472 0x402429: allocate (new_allocator.h:114)
  n1: 25472 0x402429: allocate (alloc_traits.h:444)
   n1: 25472 0x402429: _M_allocate (stl_vector.h:343)
    n1: 25472 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 25472 0x402429: push_back (stl_vector.h:1195)
      n2: 25472 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 25472 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 15200 0x401539: allocate (new_allocator.h:114)
  n1: 15200 0x401539: allocate (alloc_traits.h:444)
   n1: 15200 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 15200 0x401539: operator[] (hashtable_policy.h:701)
     n1: 15200 0x401539: operator[] (unordered_map.h:985)
      n2: 15200 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 15200 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 15200 0x401689: allocate (new_allocator.h:114)
  n1: 15200 0x401689: allocate (alloc_traits.h:444)
   n1: 15200 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 15200 0x401689: operator[] (hashtable_policy.h:701)
     n1: 15200 0x401689: operator[] (unordered_map.h:985)
      n2: 15200 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 15200 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403F18: main (lexm_spacebn.cpp:11)
           n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403F18: main (lexm_spacebn.cpp:11)
           n0: 0 in 18 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403F0E: main (lexm_spacebn.cpp:10)
             n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 6592 0x40520B: allocate (new_allocator.h:114)
  n1: 6592 0x40520B: allocate (alloc_traits.h:444)
   n1: 6592 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 6592 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 6592 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 6592 0x40341B: operator[] (stl_map.h:499)
       n2: 6592 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 6592 0x403F18: main (lexm_spacebn.cpp:11)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
#-----------
snapshot=72
#-----------
time=13238050516
mem_heap_B=509816
mem_heap_extra_B=60632
mem_stacks_B=0
heap_tree=detailed
n13: 509816 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 150016 0x405B10: allocate (new_allocator.h:114)
  n1: 150016 0x405B10: allocate (alloc_traits.h:444)
   n1: 150016 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 150016 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 150016 0x405B10: push_back (stl_vector.h:1195)
      n1: 150016 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 150016 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 150016 0x403F0E: main (lexm_spacebn.cpp:10)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 86784 0x405965: allocate (new_allocator.h:114)
  n1: 86784 0x405965: allocate (alloc_traits.h:444)
   n1: 86784 0x405965: _M_allocate (stl_vector.h:343)
    n1: 86784 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 86784 0x405965: push_back (stl_vector.h:1195)
      n1: 86784 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 86784 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 86784 0x403F0E: main (lexm_spacebn.cpp:10)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 38000 0x404D3A: allocate (new_allocator.h:114)
  n1: 38000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 38000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 38000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 38000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 38000 0x4017C5: operator[] (stl_map.h:499)
       n2: 38000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 38000 0x403F18: main (lexm_spacebn.cpp:11)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 38000 0x408B97: allocate (new_allocator.h:114)
  n1: 38000 0x408B97: allocate (alloc_traits.h:444)
   n1: 38000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 38000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 38000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 38000 0x4055B6: insert (unordered_map.h:586)
       n1: 38000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 38000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 38000 0x403F0E: main (lexm_spacebn.cpp:10)
         n0: 0 in 18 places, all below massif's threshold (1.00%)
 n0: 30672 in 12 places, all below massif's threshold (1.00%)
 n1: 29200 0x402429: allocate (new_allocator.h:114)
  n1: 29200 0x402429: allocate (alloc_traits.h:444)
   n1: 29200 0x402429: _M_allocate (stl_vector.h:343)
    n1: 29200 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 29200 0x402429: push_back (stl_vector.h:1195)
      n2: 29200 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 29200 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 15200 0x401539: allocate (new_allocator.h:114)
  n1: 15200 0x401539: allocate (alloc_traits.h:444)
   n1: 15200 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 15200 0x401539: operator[] (hashtable_policy.h:701)
     n1: 15200 0x401539: operator[] (unordered_map.h:985)
      n2: 15200 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 15200 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 15200 0x401689: allocate (new_allocator.h:114)
  n1: 15200 0x401689: allocate (alloc_traits.h:444)
   n1: 15200 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 15200 0x401689: operator[] (hashtable_policy.h:701)
     n1: 15200 0x401689: operator[] (unordered_map.h:985)
      n2: 15200 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 15200 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403F18: main (lexm_spacebn.cpp:11)
           n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403F18: main (lexm_spacebn.cpp:11)
           n0: 0 in 18 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403F0E: main (lexm_spacebn.cpp:10)
             n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 7424 0x40520B: allocate (new_allocator.h:114)
  n1: 7424 0x40520B: allocate (alloc_traits.h:444)
   n1: 7424 0x40520B: _M_get_node (stl_tree.h:580)
    n1: 7424 0x40520B: _M_create_node<const std::piecewise_construct_t &, std::tuple<const float &>, std::tuple<> > (stl_tree.h:630)
     n1: 7424 0x40520B: std::_Rb_tree_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > > std::_Rb_tree<float, std::pair<float const, std::vector<int, std::allocator<int> > >, std::_Select1st<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::less<float>, std::allocator<std::pair<float const, std::vector<int, std::allocator<int> > > > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<float const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<float const, std::vector<int, std::allocator<int> > > >, std::piecewise_construct_t const&, std::tuple<float const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 7424 0x40341B: operator[] (stl_map.h:499)
       n2: 7424 0x40341B: graph_algorithms::lexm(Graph&) (lexm.h:108)
        n0: 7424 0x403F18: main (lexm_spacebn.cpp:11)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
#-----------
snapshot=73
#-----------
time=13367970026
mem_heap_B=498224
mem_heap_extra_B=57944
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=74
#-----------
time=13498068013
mem_heap_B=498472
mem_heap_extra_B=57976
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=75
#-----------
time=13627989274
mem_heap_B=498408
mem_heap_extra_B=57968
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=76
#-----------
time=13757912461
mem_heap_B=498688
mem_heap_extra_B=57992
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=77
#-----------
time=13887833648
mem_heap_B=499264
mem_heap_extra_B=58120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=78
#-----------
time=14017754869
mem_heap_B=499296
mem_heap_extra_B=58120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=79
#-----------
time=14147680737
mem_heap_B=499296
mem_heap_extra_B=58120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=80
#-----------
time=14277601802
mem_heap_B=499296
mem_heap_extra_B=58120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=81
#-----------
time=14407522169
mem_heap_B=499296
mem_heap_extra_B=58120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=82
#-----------
time=14537441221
mem_heap_B=499296
mem_heap_extra_B=58120
mem_stacks_B=0
heap_tree=detailed
n12: 499296 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 150016 0x405B10: allocate (new_allocator.h:114)
  n1: 150016 0x405B10: allocate (alloc_traits.h:444)
   n1: 150016 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 150016 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 150016 0x405B10: push_back (stl_vector.h:1195)
      n1: 150016 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 150016 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 150016 0x403F0E: main (lexm_spacebn.cpp:10)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 86784 0x405965: allocate (new_allocator.h:114)
  n1: 86784 0x405965: allocate (alloc_traits.h:444)
   n1: 86784 0x405965: _M_allocate (stl_vector.h:343)
    n1: 86784 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 86784 0x405965: push_back (stl_vector.h:1195)
      n1: 86784 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 86784 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 86784 0x403F0E: main (lexm_spacebn.cpp:10)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 38000 0x404D3A: allocate (new_allocator.h:114)
  n1: 38000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 38000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 38000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 38000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 38000 0x4017C5: operator[] (stl_map.h:499)
       n2: 38000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 38000 0x403F18: main (lexm_spacebn.cpp:11)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 38000 0x408B97: allocate (new_allocator.h:114)
  n1: 38000 0x408B97: allocate (alloc_traits.h:444)
   n1: 38000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 38000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 38000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 38000 0x4055B6: insert (unordered_map.h:586)
       n1: 38000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 38000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 38000 0x403F0E: main (lexm_spacebn.cpp:10)
         n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 30400 0x402429: allocate (new_allocator.h:114)
  n1: 30400 0x402429: allocate (alloc_traits.h:444)
   n1: 30400 0x402429: _M_allocate (stl_vector.h:343)
    n1: 30400 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 30400 0x402429: push_back (stl_vector.h:1195)
      n2: 30400 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 30400 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n0: 26376 in 13 places, all below massif's threshold (1.00%)
 n1: 15200 0x401539: allocate (new_allocator.h:114)
  n1: 15200 0x401539: allocate (alloc_traits.h:444)
   n1: 15200 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 15200 0x401539: operator[] (hashtable_policy.h:701)
     n1: 15200 0x401539: operator[] (unordered_map.h:985)
      n2: 15200 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 15200 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 15200 0x401689: allocate (new_allocator.h:114)
  n1: 15200 0x401689: allocate (alloc_traits.h:444)
   n1: 15200 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 15200 0x401689: operator[] (hashtable_policy.h:701)
     n1: 15200 0x401689: operator[] (unordered_map.h:985)
      n2: 15200 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 15200 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403F18: main (lexm_spacebn.cpp:11)
           n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 8872 0x404BC2: allocate (new_allocator.h:114)
  n1: 8872 0x404BC2: allocate (alloc_traits.h:444)
   n1: 8872 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 8872 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403F18: main (lexm_spacebn.cpp:11)
           n0: 0 in 18 places, all below massif's threshold (1.00%)
        n0: 0 in 1 place, below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403F0E: main (lexm_spacebn.cpp:10)
             n0: 0 in 18 places, all below massif's threshold (1.00%)
#-----------
snapshot=83
#-----------
time=14667360359
mem_heap_B=499296
mem_heap_extra_B=58120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=84
#-----------
time=14797280961
mem_heap_B=499296
mem_heap_extra_B=58120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=85
#-----------
time=14927203073
mem_heap_B=499296
mem_heap_extra_B=58120
mem_stacks_B=0
heap_tree=empty
#-----------
snapshot=86
#-----------
time=15031930075
mem_heap_B=524968
mem_heap_extra_B=62584
mem_stacks_B=0
heap_tree=peak
n13: 524968 (heap allocation functions) malloc/new/new[], --alloc-fns, etc.
 n1: 150016 0x405B10: allocate (new_allocator.h:114)
  n1: 150016 0x405B10: allocate (alloc_traits.h:444)
   n1: 150016 0x405B10: _M_allocate (stl_vector.h:343)
    n1: 150016 0x405B10: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 150016 0x405B10: push_back (stl_vector.h:1195)
      n1: 150016 0x405B10: Graph::addEdge(int, int) (graph.cpp:23)
       n2: 150016 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 150016 0x403F0E: main (lexm_spacebn.cpp:10)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 86784 0x405965: allocate (new_allocator.h:114)
  n1: 86784 0x405965: allocate (alloc_traits.h:444)
   n1: 86784 0x405965: _M_allocate (stl_vector.h:343)
    n1: 86784 0x405965: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 86784 0x405965: push_back (stl_vector.h:1195)
      n1: 86784 0x405965: Graph::addEdge(int, int) (graph.cpp:22)
       n2: 86784 0x406CCA: Graph::randomPopulate(int, int, int) (graph.cpp:73)
        n0: 86784 0x403F0E: main (lexm_spacebn.cpp:10)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 72704 0x48FCA99: ??? (in /usr/lib/x86_64-linux-gnu/libstdc++.so.6.0.28)
  n1: 72704 0x4011B89: call_init.part.0 (dl-init.c:72)
   n1: 72704 0x4011C90: call_init (dl-init.c:30)
    n1: 72704 0x4011C90: _dl_init (dl-init.c:119)
     n0: 72704 0x4001139: ??? (in /usr/lib/x86_64-linux-gnu/ld-2.31.so)
 n1: 38000 0x404D3A: allocate (new_allocator.h:114)
  n1: 38000 0x404D3A: allocate (alloc_traits.h:444)
   n1: 38000 0x404D3A: _M_get_node (stl_tree.h:580)
    n1: 38000 0x404D3A: _M_create_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (stl_tree.h:630)
     n1: 38000 0x404D3A: std::_Rb_tree_iterator<std::pair<int const, bool> > std::_Rb_tree<int, std::pair<int const, bool>, std::_Select1st<std::pair<int const, bool> >, std::less<int>, std::allocator<std::pair<int const, bool> > >::_M_emplace_hint_unique<std::piecewise_construct_t const&, std::tuple<int const&>, std::tuple<> >(std::_Rb_tree_const_iterator<std::pair<int const, bool> >, std::piecewise_construct_t const&, std::tuple<int const&>&&, std::tuple<>&&) (stl_tree.h:2455)
      n1: 38000 0x4017C5: operator[] (stl_map.h:499)
       n2: 38000 0x4017C5: graph_algorithms::lexm(Graph&) (lexm.h:32)
        n0: 38000 0x403F18: main (lexm_spacebn.cpp:11)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 38000 0x408B97: allocate (new_allocator.h:114)
  n1: 38000 0x408B97: allocate (alloc_traits.h:444)
   n1: 38000 0x408B97: _M_allocate_node<std::pair<const int, Graph::nodeInfo> > (hashtable_policy.h:2081)
    n1: 38000 0x408B97: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1638)
     n1: 38000 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
      n1: 38000 0x4055B6: insert (unordered_map.h:586)
       n1: 38000 0x4055B6: Graph::addNode(int) (graph.cpp:12)
        n2: 38000 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
         n0: 38000 0x403F0E: main (lexm_spacebn.cpp:10)
         n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 30400 0x402429: allocate (new_allocator.h:114)
  n1: 30400 0x402429: allocate (alloc_traits.h:444)
   n1: 30400 0x402429: _M_allocate (stl_vector.h:343)
    n1: 30400 0x402429: _M_realloc_insert<const int &> (vector.tcc:440)
     n1: 30400 0x402429: push_back (stl_vector.h:1195)
      n2: 30400 0x402429: graph_algorithms::lexm(Graph&) (lexm.h:88)
       n0: 30400 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n0: 30176 in 12 places, all below massif's threshold (1.00%)
 n1: 22072 0x404BC2: allocate (new_allocator.h:114)
  n1: 22072 0x404BC2: allocate (alloc_traits.h:444)
   n1: 22072 0x404BC2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 22072 0x404BC2: _M_allocate_buckets (hashtable.h:361)
     n1: 22072 0x404BC2: _M_rehash_aux (hashtable.h:2088)
      n1: 22072 0x404BC2: _M_rehash (hashtable.h:2067)
       n2: 22072 0x404BC2: std::_Hashtable<int, std::pair<int const, int>, std::allocator<std::pair<int const, int> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, int>, false>*, unsigned long) (hashtable.h:1713)
        n1: 13200 0x408796: operator[] (hashtable_policy.h:704)
         n1: 13200 0x408796: operator[] (unordered_map.h:985)
          n1: 13200 0x408796: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
           n2: 13200 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
            n0: 13200 0x403F18: main (lexm_spacebn.cpp:11)
            n0: 0 in 18 places, all below massif's threshold (1.00%)
        n1: 8872 0x4016BA: operator[] (hashtable_policy.h:704)
         n1: 8872 0x4016BA: operator[] (unordered_map.h:985)
          n2: 8872 0x4016BA: graph_algorithms::lexm(Graph&) (lexm.h:30)
           n0: 8872 0x403F18: main (lexm_spacebn.cpp:11)
           n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 15200 0x401539: allocate (new_allocator.h:114)
  n1: 15200 0x401539: allocate (alloc_traits.h:444)
   n1: 15200 0x401539: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 15200 0x401539: operator[] (hashtable_policy.h:701)
     n1: 15200 0x401539: operator[] (unordered_map.h:985)
      n2: 15200 0x401539: graph_algorithms::lexm(Graph&) (lexm.h:29)
       n0: 15200 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 15200 0x401689: allocate (new_allocator.h:114)
  n1: 15200 0x401689: allocate (alloc_traits.h:444)
   n1: 15200 0x401689: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 15200 0x401689: operator[] (hashtable_policy.h:701)
     n1: 15200 0x401689: operator[] (unordered_map.h:985)
      n2: 15200 0x401689: graph_algorithms::lexm(Graph&) (lexm.h:30)
       n0: 15200 0x403F18: main (lexm_spacebn.cpp:11)
       n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 8872 0x4049E2: allocate (new_allocator.h:114)
  n1: 8872 0x4049E2: allocate (alloc_traits.h:444)
   n1: 8872 0x4049E2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x4049E2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x4049E2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x4049E2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x4049E2: std::_Hashtable<int, std::pair<int const, float>, std::allocator<std::pair<int const, float> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, float>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x401567: operator[] (hashtable_policy.h:704)
         n1: 8872 0x401567: operator[] (unordered_map.h:985)
          n2: 8872 0x401567: graph_algorithms::lexm(Graph&) (lexm.h:29)
           n0: 8872 0x403F18: main (lexm_spacebn.cpp:11)
           n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 8872 0x408CF2: allocate (new_allocator.h:114)
  n1: 8872 0x408CF2: allocate (alloc_traits.h:444)
   n1: 8872 0x408CF2: _M_allocate_buckets (hashtable_policy.h:2134)
    n1: 8872 0x408CF2: _M_allocate_buckets (hashtable.h:361)
     n1: 8872 0x408CF2: _M_rehash_aux (hashtable.h:2088)
      n1: 8872 0x408CF2: _M_rehash (hashtable.h:2067)
       n1: 8872 0x408CF2: std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_insert_unique_node(unsigned long, unsigned long, std::__detail::_Hash_node<std::pair<int const, Graph::nodeInfo>, false>*, unsigned long) (hashtable.h:1713)
        n1: 8872 0x408C58: std::pair<std::__detail::_Node_iterator<std::pair<int const, Graph::nodeInfo>, false, false>, bool> std::_Hashtable<int, std::pair<int const, Graph::nodeInfo>, std::allocator<std::pair<int const, Graph::nodeInfo> >, std::__detail::_Select1st, std::equal_to<int>, std::hash<int>, std::__detail::_Mod_range_hashing, std::__detail::_Default_ranged_hash, std::__detail::_Prime_rehash_policy, std::__detail::_Hashtable_traits<false, false, true> >::_M_emplace<std::pair<int const, Graph::nodeInfo> >(std::integral_constant<bool, true>, std::pair<int const, Graph::nodeInfo>&&) (hashtable.h:1660)
         n1: 8872 0x4055B6: insert<std::pair<const int, Graph::nodeInfo>, void> (hashtable_policy.h:1005)
          n1: 8872 0x4055B6: insert (unordered_map.h:586)
           n1: 8872 0x4055B6: Graph::addNode(int) (graph.cpp:12)
            n2: 8872 0x406959: Graph::randomPopulate(int, int, int) (graph.cpp:63)
             n0: 8872 0x403F0E: main (lexm_spacebn.cpp:10)
             n0: 0 in 18 places, all below massif's threshold (1.00%)
 n1: 8672 0x408769: allocate (new_allocator.h:114)
  n1: 8672 0x408769: allocate (alloc_traits.h:444)
   n1: 8672 0x408769: _M_allocate_node<const std::piecewise_construct_t &, std::tuple<const int &>, std::tuple<> > (hashtable_policy.h:2081)
    n1: 8672 0x408769: operator[] (hashtable_policy.h:701)
     n1: 8672 0x408769: operator[] (unordered_map.h:985)
      n1: 8672 0x408769: Graph::setOrder(std::vector<int, std::allocator<int> >) (graph.cpp:178)
       n2: 8672 0x403728: graph_algorithms::lexm(Graph&) (lexm.h:127)
        n0: 8672 0x403F18: main (lexm_spacebn.cpp:11)
        n0: 0 in 18 places, all below massif's threshold (1.00%)
